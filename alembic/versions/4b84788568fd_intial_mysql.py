# ===================================================
# NOTICE: This file is part of a private repository.
# Provided for demonstration purposes only.
# Not suitable for production use.
# ===================================================

"""Intial MySQL

Revision ID: 4b84788568fd
Revises: 
Create Date: 2025-02-02 15:19:12.044403

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '4b84788568fd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', mysql.CHAR(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('job_title', sa.String(length=100), nullable=True),
    sa.Column('resume', sa.String(length=500), nullable=True),
    sa.Column('avi', sa.String(length=500), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_token', sa.String(length=100), nullable=True),
    sa.Column('token_expiry', sa.DateTime(), nullable=True),
    sa.Column('resume_tokens', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('verification_token'),
    sa.UniqueConstraint('verification_token', name='uq_verification_token')
    )
    op.create_table('postgres_databases',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('db_name', sa.String(length=255), nullable=False),
    sa.Column('hostname', sa.String(length=255), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('postgres_replication_slots',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('publication_name', sa.String(length=255), nullable=False),
    sa.Column('slot_name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('active', 'disabled', name='replicationslotstatus'), nullable=False),
    sa.Column('annotations', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('postgres_database_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['postgres_database_id'], ['postgres_databases.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('wal_events',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('wal_pipeline_id', sa.String(length=36), nullable=False),
    sa.Column('commit_lsn', sa.BigInteger(), nullable=False),
    sa.Column('seq', sa.Integer(), nullable=False),
    sa.Column('record_pks', sa.JSON(), nullable=False),
    sa.Column('record', sa.JSON(), nullable=False),
    sa.Column('changes', sa.JSON(), nullable=True),
    sa.Column('action', sa.Enum('insert', 'update', 'delete', name='waleventaction'), nullable=False),
    sa.Column('committed_at', sa.DateTime(), nullable=False),
    sa.Column('source_table_oid', sa.Integer(), nullable=False),
    sa.Column('source_table_schema', sa.String(length=255), nullable=False),
    sa.Column('source_table_name', sa.String(length=255), nullable=False),
    sa.Column('inserted_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['wal_pipeline_id'], ['postgres_replication_slots.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wal_events')
    op.drop_table('postgres_replication_slots')
    op.drop_table('postgres_databases')
    op.drop_table('users')
    # ### end Alembic commands ###
